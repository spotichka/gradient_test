{"version":3,"sources":["Field.jsx","GradientItem.jsx","App.js","reportWebVitals.js","index.js"],"names":["Field","value","setValue","placeholder","type","onChange","e","target","GradientItem","firstvalue","secondvalue","index","deleteItem","gradient","background","style","className","onClick","App","useState","gradientsArr","setGradientsArr","firstValue","setFirstValue","secondValue","setSecondValue","valueValidation","length","letter","indexOf","gradientArrCopy","filter","item","arrIndex","onSubmit","firstGradient","secondGradient","preventDefault","disabled","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAeeA,EAbD,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YAChC,OACE,8BACE,uBACEA,YAAaA,EACbF,MAAOA,EACPG,KAAK,OACLC,SAAU,SAACC,GAAD,OAAOJ,EAASI,EAAEC,OAAON,aCc5BO,EArBM,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,WAAYC,EAAqC,EAArCA,YAAaC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WAClDC,EAAW,CACbC,WAAW,yBAAD,OAA2BL,EAA3B,YAAyCC,EAAzC,MAGZ,OACE,sBAAKK,MAAOF,EAAUG,UAAU,aAAhC,UACE,sBAAMA,UAAU,mBAAhB,SAAoCP,IACpC,sBAAMO,UAAU,mBAAhB,SAAoCN,IACpC,wBACEM,UAAW,kBACXC,QAAS,WACPL,EAAWD,IAHf,mBC8ESO,G,MAnFH,WAAO,IAAD,EACsBC,mBAAS,IAD/B,mBACXC,EADW,KACGC,EADH,OAEkBF,mBAAS,IAF3B,mBAEXG,EAFW,KAECC,EAFD,OAGoBJ,mBAAS,IAH7B,mBAGXK,EAHW,KAGEC,EAHF,KAKZC,EAAkB,SAACzB,GACrB,GAAkB,MAAbA,EAAM,IAA+B,IAAjBA,EAAM0B,QAAkC,IAAjB1B,EAAM0B,OAAc,CAAC,IAAD,gBAC7C1B,GAD6C,IAClE,2BAA4B,CAAC,IAAlB2B,EAAiB,QAC1B,IAAmD,IAA/C,0BAA0BC,QAAQD,GACpC,OAAO,GAHuD,8BAMlE,OAAO,EACF,OAAO,GAoBZhB,EAAa,SAACD,GAChB,IAAImB,EAAe,YAAOV,GAC1BC,EACES,EAAgBC,QAAO,SAACC,EAAMC,GAC5B,OAAOA,IAAatB,OAK1B,OACE,qBAAKK,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,uBAAMkB,SAjBO,SAAC5B,GAXlBe,EAAgB,GAAD,mBACVD,GADU,CAEb,CACEe,cAAeb,EACfc,eAAgBZ,MAGpBD,EAAc,IACdE,EAAe,IAKfnB,EAAE+B,kBAegCrB,UAAU,OAAxC,UACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CACEb,YAAa,UACbF,MAAOqB,EACPpB,SAAUqB,IAEZ,cAAC,EAAD,CACEpB,YAAa,UACbF,MAAOuB,EACPtB,SAAUuB,OAGd,wBACET,UAAU,YACVsB,UACGZ,EAAgBJ,KAAgBI,EAAgBF,GAHrD,6BASF,qBAAKR,UAAU,WAAf,SACGI,EAAamB,KAAI,SAACP,EAAMrB,GAAP,OAChB,cAAC,EAAD,CAEEA,MAAOA,EACPF,WAAYuB,EAAKG,cACjBzB,YAAasB,EAAKI,eAClBxB,WAAYA,GAJPD,eChEJ6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0020345b.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Field = ({ value, setValue, placeholder }) => {\n  return (\n    <div>\n      <input\n        placeholder={placeholder}\n        value={value}\n        type=\"text\"\n        onChange={(e) => setValue(e.target.value)}\n      ></input>\n    </div>\n  );\n};\n\nexport default Field;\n","import React from \"react\";\n\nconst GradientItem = ({ firstvalue, secondvalue, index, deleteItem }) => {\n  let gradient = {\n    background: `linear-gradient(90deg,${firstvalue},${secondvalue})`,\n  };\n\n  return (\n    <div style={gradient} className=\"item_block\">\n      <span className=\"item_block__text\">{firstvalue}</span>\n      <span className=\"item_block__text\">{secondvalue}</span>\n      <button\n        className={\"item_block__btn\"}\n        onClick={() => {\n          deleteItem(index);\n        }}\n      >\n        X\n      </button>\n    </div>\n  );\n};\n\nexport default GradientItem;\n","import { useState } from \"react\";\nimport Field from \"./Field\";\nimport GradientItem from \"./GradientItem\";\n\nimport \"./App.css\";\n\nconst App = () => {\n  let [gradientsArr, setGradientsArr] = useState([]);\n  let [firstValue, setFirstValue] = useState(\"\");\n  let [secondValue, setSecondValue] = useState(\"\");\n\n  let valueValidation = (value) => {\n    if ((value[0] === \"#\" && value.length === 4) || value.length === 7) {\n      for (const letter of value) {\n        if (\"#0123456789ABCDEFabcdef\".indexOf(letter) === -1) {\n          return false;\n        }\n      }\n      return true;\n    } else return false;\n  };\n\n  let addGradients = () => {\n    setGradientsArr([\n      ...gradientsArr,\n      {\n        firstGradient: firstValue,\n        secondGradient: secondValue,\n      },\n    ]);\n    setFirstValue(\"\");\n    setSecondValue(\"\");\n  };\n\n  let handleSubmit = (e) => {\n    addGradients();\n    e.preventDefault();\n  };\n\n  let deleteItem = (index) => {\n    let gradientArrCopy = [...gradientsArr];\n    setGradientsArr(\n      gradientArrCopy.filter((item, arrIndex) => {\n        return arrIndex !== index;\n      })\n    );\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"app\">\n        <form onSubmit={handleSubmit} className=\"form\">\n          <div className=\"form__inputs\">\n            <Field\n              placeholder={\"#000000\"}\n              value={firstValue}\n              setValue={setFirstValue}\n            />\n            <Field\n              placeholder={\"#ffffff\"}\n              value={secondValue}\n              setValue={setSecondValue}\n            />\n          </div>\n          <button\n            className=\"form__btn\"\n            disabled={\n              !valueValidation(firstValue) || !valueValidation(secondValue)\n            }\n          >\n            Add gradient\n          </button>\n        </form>\n        <div className=\"gradient\">\n          {gradientsArr.map((item, index) => (\n            <GradientItem\n              key={index}\n              index={index}\n              firstvalue={item.firstGradient}\n              secondvalue={item.secondGradient}\n              deleteItem={deleteItem}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}